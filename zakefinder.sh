#!/bin/bash

# Fun√ß√£o de anima√ß√£o de loading
loading_animation() {
  chars=('/' '-' '\' '|')
  while :; do
    for c in "${chars[@]}"; do
      echo -ne "\r[‚è≥] Coletando... $c"
      sleep 0.1
    done
  done
}

# Fun√ß√£o para executar ferramenta com anima√ß√£o e mensagem de sucesso
executar_com_animacao() {
  comando=$1
  saida=$2
  loading_animation &
  pid=$!
  eval "$comando" &> /dev/null
  kill $pid &> /dev/null
  wait $pid 2>/dev/null
  echo -ne "\r[‚úÖ] $saida finalizado.\n"
}

# Cor lavanda suave
echo -e "\e[38;2;200;160;255m"
cat << 'EOF'
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó 
‚ïö‚ïê‚ïê‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó
  ‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù
 ‚ñà‚ñà‚ñà‚ïî‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù
         ‚ñë      ‚ñë   ‚ñë    ‚ñë   ‚ñë     ‚ñë        ‚ñë   ‚ñë       ‚ñë     ‚ñë
           ‚ñë    ‚ñë  ‚ñë   ‚ñë    ‚ñë  ‚ñë     ‚ñë       ‚ñë    ‚ñë        ‚ñë
             ‚ñë        ‚ñë    ‚ñë      ‚ñë       ‚ñë     ‚ñë      ‚ñë     ‚ñë
EOF
echo -e "\e[0m"

# Caminhos para os arquivos de configura√ß√£o
GITHUB_TOKEN_FILE="$HOME/.github_token"
PDCP_API_KEY_FILE="$HOME/.pdcp_api_key"

# Verifica depend√™ncias
for tool in subfinder chaos assetfinder findomain github-subdomains; do
  if ! command -v "$tool" &> /dev/null; then
    echo "[ERRO] '$tool' n√£o encontrado. Instale antes de continuar."
    exit 1
  fi
done

# Solicita o dom√≠nio alvo
read -p "Digite o dom√≠nio alvo: " alvo

# GitHub Token
if [ -f "$GITHUB_TOKEN_FILE" ]; then
  ghtoken=$(cat "$GITHUB_TOKEN_FILE")
  echo "[+] Usando GitHub Token salvo em $GITHUB_TOKEN_FILE"
else
  if [ -z "$GITHUB_TOKEN" ]; then
    read -p "Digite o GitHub Token: " ghtoken
    read -p "Deseja salvar o token para uso futuro? (s/n): " save_token
    if [ "$save_token" = "s" ]; then
      echo "$ghtoken" > "$GITHUB_TOKEN_FILE"
      echo "[+] Token salvo em $GITHUB_TOKEN_FILE"
    fi
  else
    ghtoken="$GITHUB_TOKEN"
    echo "[+] Usando GITHUB_TOKEN da vari√°vel de ambiente"
  fi
fi

# PDCP_API_KEY para chaos
if [ -f "$PDCP_API_KEY_FILE" ]; then
  pdcp_api_key=$(cat "$PDCP_API_KEY_FILE")
  echo "[+] Usando PDCP_API_KEY salvo em $PDCP_API_KEY_FILE"
else
  if [ -z "$PDCP_API_KEY" ]; then
    read -p "Digite a PDCP_API_KEY para o chaos: " pdcp_api_key
    read -p "Deseja salvar a chave para uso futuro? (s/n): " save_key
    if [ "$save_key" = "s" ]; then
      echo "$pdcp_api_key" > "$PDCP_API_KEY_FILE"
      echo "[+] Chave salva em $PDCP_API_KEY_FILE"
    fi
  else
    pdcp_api_key="$PDCP_API_KEY"
    echo "[+] Usando PDCP_API_KEY da vari√°vel de ambiente"
  fi
fi

export PDCP_API_KEY="$pdcp_api_key"

# Execu√ß√£o das ferramentas com anima√ß√£o
executar_com_animacao "subfinder -d \"$alvo\" -all -silent -o subfinder1" "Subfinder"
executar_com_animacao "chaos -d \"$alvo\" -silent -o chaos1" "Chaos"
executar_com_animacao "assetfinder --subs-only \"$alvo\" > assetfinder1" "Assetfinder"
executar_com_animacao "findomain -t \"$alvo\" -q -u findomain1" "Findomain"
executar_com_animacao "github-subdomains -d \"$alvo\" -t \"$ghtoken\" -o github1" "GitHub Subdomains"

# Junta resultados existentes
echo -ne "\n[üß™] Juntando resultados...\n"
> todos.tmp
for f in subfinder1 chaos1 assetfinder1 findomain1 github1; do
  [ -f "$f" ] && cat "$f" >> todos.tmp
done

sort -u todos.tmp > subs.txt
rm -f subfinder1 chaos1 assetfinder1 findomain1 github1 todos.tmp

echo -e "[‚úîÔ∏è] Finalizado! Subdom√≠nios √∫nicos salvos em \e[1msubs.txt\e[0m"
